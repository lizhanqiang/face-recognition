/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.owesome.facerecognition.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.13.0)", date = "2020-07-14")
public class FaceRecognitionItem implements org.apache.thrift.TBase<FaceRecognitionItem, FaceRecognitionItem._Fields>, java.io.Serializable, Cloneable, Comparable<FaceRecognitionItem> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("FaceRecognitionItem");

  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField BOUNDINGBOX_FIELD_DESC = new org.apache.thrift.protocol.TField("boundingbox", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField LANDMARKS_FIELD_DESC = new org.apache.thrift.protocol.TField("landmarks", org.apache.thrift.protocol.TType.MAP, (short)3);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new FaceRecognitionItemStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new FaceRecognitionItemTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.lang.String name; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String boundingbox; // required
  public @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,java.util.List<Point>> landmarks; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    NAME((short)1, "name"),
    BOUNDINGBOX((short)2, "boundingbox"),
    LANDMARKS((short)3, "landmarks");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // NAME
          return NAME;
        case 2: // BOUNDINGBOX
          return BOUNDINGBOX;
        case 3: // LANDMARKS
          return LANDMARKS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BOUNDINGBOX, new org.apache.thrift.meta_data.FieldMetaData("boundingbox", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LANDMARKS, new org.apache.thrift.meta_data.FieldMetaData("landmarks", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
                new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Point.class)))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(FaceRecognitionItem.class, metaDataMap);
  }

  public FaceRecognitionItem() {
  }

  public FaceRecognitionItem(
    java.lang.String name,
    java.lang.String boundingbox,
    java.util.Map<java.lang.String,java.util.List<Point>> landmarks)
  {
    this();
    this.name = name;
    this.boundingbox = boundingbox;
    this.landmarks = landmarks;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public FaceRecognitionItem(FaceRecognitionItem other) {
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetBoundingbox()) {
      this.boundingbox = other.boundingbox;
    }
    if (other.isSetLandmarks()) {
      java.util.Map<java.lang.String,java.util.List<Point>> __this__landmarks = new java.util.HashMap<java.lang.String,java.util.List<Point>>(other.landmarks.size());
      for (java.util.Map.Entry<java.lang.String, java.util.List<Point>> other_element : other.landmarks.entrySet()) {

        java.lang.String other_element_key = other_element.getKey();
        java.util.List<Point> other_element_value = other_element.getValue();

        java.lang.String __this__landmarks_copy_key = other_element_key;

        java.util.List<Point> __this__landmarks_copy_value = new java.util.ArrayList<Point>(other_element_value.size());
        for (Point other_element_value_element : other_element_value) {
          __this__landmarks_copy_value.add(new Point(other_element_value_element));
        }

        __this__landmarks.put(__this__landmarks_copy_key, __this__landmarks_copy_value);
      }
      this.landmarks = __this__landmarks;
    }
  }

  public FaceRecognitionItem deepCopy() {
    return new FaceRecognitionItem(this);
  }

  @Override
  public void clear() {
    this.name = null;
    this.boundingbox = null;
    this.landmarks = null;
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getName() {
    return this.name;
  }

  public FaceRecognitionItem setName(@org.apache.thrift.annotation.Nullable java.lang.String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getBoundingbox() {
    return this.boundingbox;
  }

  public FaceRecognitionItem setBoundingbox(@org.apache.thrift.annotation.Nullable java.lang.String boundingbox) {
    this.boundingbox = boundingbox;
    return this;
  }

  public void unsetBoundingbox() {
    this.boundingbox = null;
  }

  /** Returns true if field boundingbox is set (has been assigned a value) and false otherwise */
  public boolean isSetBoundingbox() {
    return this.boundingbox != null;
  }

  public void setBoundingboxIsSet(boolean value) {
    if (!value) {
      this.boundingbox = null;
    }
  }

  public int getLandmarksSize() {
    return (this.landmarks == null) ? 0 : this.landmarks.size();
  }

  public void putToLandmarks(java.lang.String key, java.util.List<Point> val) {
    if (this.landmarks == null) {
      this.landmarks = new java.util.HashMap<java.lang.String,java.util.List<Point>>();
    }
    this.landmarks.put(key, val);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Map<java.lang.String,java.util.List<Point>> getLandmarks() {
    return this.landmarks;
  }

  public FaceRecognitionItem setLandmarks(@org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,java.util.List<Point>> landmarks) {
    this.landmarks = landmarks;
    return this;
  }

  public void unsetLandmarks() {
    this.landmarks = null;
  }

  /** Returns true if field landmarks is set (has been assigned a value) and false otherwise */
  public boolean isSetLandmarks() {
    return this.landmarks != null;
  }

  public void setLandmarksIsSet(boolean value) {
    if (!value) {
      this.landmarks = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((java.lang.String)value);
      }
      break;

    case BOUNDINGBOX:
      if (value == null) {
        unsetBoundingbox();
      } else {
        setBoundingbox((java.lang.String)value);
      }
      break;

    case LANDMARKS:
      if (value == null) {
        unsetLandmarks();
      } else {
        setLandmarks((java.util.Map<java.lang.String,java.util.List<Point>>)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case NAME:
      return getName();

    case BOUNDINGBOX:
      return getBoundingbox();

    case LANDMARKS:
      return getLandmarks();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case NAME:
      return isSetName();
    case BOUNDINGBOX:
      return isSetBoundingbox();
    case LANDMARKS:
      return isSetLandmarks();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof FaceRecognitionItem)
      return this.equals((FaceRecognitionItem)that);
    return false;
  }

  public boolean equals(FaceRecognitionItem that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_boundingbox = true && this.isSetBoundingbox();
    boolean that_present_boundingbox = true && that.isSetBoundingbox();
    if (this_present_boundingbox || that_present_boundingbox) {
      if (!(this_present_boundingbox && that_present_boundingbox))
        return false;
      if (!this.boundingbox.equals(that.boundingbox))
        return false;
    }

    boolean this_present_landmarks = true && this.isSetLandmarks();
    boolean that_present_landmarks = true && that.isSetLandmarks();
    if (this_present_landmarks || that_present_landmarks) {
      if (!(this_present_landmarks && that_present_landmarks))
        return false;
      if (!this.landmarks.equals(that.landmarks))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
    if (isSetName())
      hashCode = hashCode * 8191 + name.hashCode();

    hashCode = hashCode * 8191 + ((isSetBoundingbox()) ? 131071 : 524287);
    if (isSetBoundingbox())
      hashCode = hashCode * 8191 + boundingbox.hashCode();

    hashCode = hashCode * 8191 + ((isSetLandmarks()) ? 131071 : 524287);
    if (isSetLandmarks())
      hashCode = hashCode * 8191 + landmarks.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(FaceRecognitionItem other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetBoundingbox()).compareTo(other.isSetBoundingbox());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBoundingbox()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.boundingbox, other.boundingbox);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLandmarks()).compareTo(other.isSetLandmarks());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLandmarks()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.landmarks, other.landmarks);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("FaceRecognitionItem(");
    boolean first = true;

    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("boundingbox:");
    if (this.boundingbox == null) {
      sb.append("null");
    } else {
      sb.append(this.boundingbox);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("landmarks:");
    if (this.landmarks == null) {
      sb.append("null");
    } else {
      sb.append(this.landmarks);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (name == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'name' was not present! Struct: " + toString());
    }
    if (boundingbox == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'boundingbox' was not present! Struct: " + toString());
    }
    if (landmarks == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'landmarks' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class FaceRecognitionItemStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public FaceRecognitionItemStandardScheme getScheme() {
      return new FaceRecognitionItemStandardScheme();
    }
  }

  private static class FaceRecognitionItemStandardScheme extends org.apache.thrift.scheme.StandardScheme<FaceRecognitionItem> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, FaceRecognitionItem struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // BOUNDINGBOX
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.boundingbox = iprot.readString();
              struct.setBoundingboxIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // LANDMARKS
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map0 = iprot.readMapBegin();
                struct.landmarks = new java.util.HashMap<java.lang.String,java.util.List<Point>>(2*_map0.size);
                @org.apache.thrift.annotation.Nullable java.lang.String _key1;
                @org.apache.thrift.annotation.Nullable java.util.List<Point> _val2;
                for (int _i3 = 0; _i3 < _map0.size; ++_i3)
                {
                  _key1 = iprot.readString();
                  {
                    org.apache.thrift.protocol.TList _list4 = iprot.readListBegin();
                    _val2 = new java.util.ArrayList<Point>(_list4.size);
                    @org.apache.thrift.annotation.Nullable Point _elem5;
                    for (int _i6 = 0; _i6 < _list4.size; ++_i6)
                    {
                      _elem5 = new Point();
                      _elem5.read(iprot);
                      _val2.add(_elem5);
                    }
                    iprot.readListEnd();
                  }
                  struct.landmarks.put(_key1, _val2);
                }
                iprot.readMapEnd();
              }
              struct.setLandmarksIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, FaceRecognitionItem struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.name);
        oprot.writeFieldEnd();
      }
      if (struct.boundingbox != null) {
        oprot.writeFieldBegin(BOUNDINGBOX_FIELD_DESC);
        oprot.writeString(struct.boundingbox);
        oprot.writeFieldEnd();
      }
      if (struct.landmarks != null) {
        oprot.writeFieldBegin(LANDMARKS_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.LIST, struct.landmarks.size()));
          for (java.util.Map.Entry<java.lang.String, java.util.List<Point>> _iter7 : struct.landmarks.entrySet())
          {
            oprot.writeString(_iter7.getKey());
            {
              oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, _iter7.getValue().size()));
              for (Point _iter8 : _iter7.getValue())
              {
                _iter8.write(oprot);
              }
              oprot.writeListEnd();
            }
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class FaceRecognitionItemTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public FaceRecognitionItemTupleScheme getScheme() {
      return new FaceRecognitionItemTupleScheme();
    }
  }

  private static class FaceRecognitionItemTupleScheme extends org.apache.thrift.scheme.TupleScheme<FaceRecognitionItem> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, FaceRecognitionItem struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeString(struct.name);
      oprot.writeString(struct.boundingbox);
      {
        oprot.writeI32(struct.landmarks.size());
        for (java.util.Map.Entry<java.lang.String, java.util.List<Point>> _iter9 : struct.landmarks.entrySet())
        {
          oprot.writeString(_iter9.getKey());
          {
            oprot.writeI32(_iter9.getValue().size());
            for (Point _iter10 : _iter9.getValue())
            {
              _iter10.write(oprot);
            }
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, FaceRecognitionItem struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.name = iprot.readString();
      struct.setNameIsSet(true);
      struct.boundingbox = iprot.readString();
      struct.setBoundingboxIsSet(true);
      {
        org.apache.thrift.protocol.TMap _map11 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.LIST, iprot.readI32());
        struct.landmarks = new java.util.HashMap<java.lang.String,java.util.List<Point>>(2*_map11.size);
        @org.apache.thrift.annotation.Nullable java.lang.String _key12;
        @org.apache.thrift.annotation.Nullable java.util.List<Point> _val13;
        for (int _i14 = 0; _i14 < _map11.size; ++_i14)
        {
          _key12 = iprot.readString();
          {
            org.apache.thrift.protocol.TList _list15 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            _val13 = new java.util.ArrayList<Point>(_list15.size);
            @org.apache.thrift.annotation.Nullable Point _elem16;
            for (int _i17 = 0; _i17 < _list15.size; ++_i17)
            {
              _elem16 = new Point();
              _elem16.read(iprot);
              _val13.add(_elem16);
            }
          }
          struct.landmarks.put(_key12, _val13);
        }
      }
      struct.setLandmarksIsSet(true);
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

